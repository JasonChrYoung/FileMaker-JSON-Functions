/**
 * =====================================
 * ~json ( key )
 *
 * PURPOSE:
 *		
 *
 * RETURNS:
 *		Empty string.
 *
 * PARAMETERS:
 *		key = object property/name
 *
 * DEPENDENCIES:
 *		
 *
 * HISTORY:
 *		CREATED on 2015-MAR-31 by Daniel Smith dansmith65@gmail.com
 *
 * =====================================
 */

Case (
	/* Step 0, set-up */
	not $#Filter.step ;
	Let ( [
		~result = "TODO: do setup here" ;
		
		$#Filter.result = ~result ;
		$#Filter.step = If (
			Not IsEmpty ( ~result )
				or Not IsEmpty ( $~json.error )
			;
			2 ;
			1
		)
	] ;
		#Filter ( parameters ; filterParameters )
	) ;

	/* Step 1, main */
	$#Filter.step = 1 ;
	Let ( [
		~result = "TODO: do stuff here" ;
		
		$#Filter.result = ~result ;
		$#Filter.step = If (
			Not IsEmpty ( ~result )
				or Not IsEmpty ( $~json.error )
			;
			2 ;
			1
		)
	] ;
		#Filter ( parameters ; filterParameters )
	) ;

	/* Step 2, clean-up and return result */
	$#Filter.step = 2 ;
	Let ( [
		~result = $#Filter.result ;
		// purge variables
		$#Filter.step = ""
		$#Filter.result = ""
	] ;
		~result
	)
)