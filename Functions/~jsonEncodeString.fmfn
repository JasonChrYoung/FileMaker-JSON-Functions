/**
 * =====================================
 * ~jsonEncodeString ( string )
 *
 * RETURNS:
 *		JSON encoded string.
 *
 * PARAMETERS:
 *		string = any value to be escaped as a string
 *
 * DEPENDENCIES:
 *		none
 *
 * HISTORY:
 *		CREATED on 2015-FEB-05 by Daniel Smith dansmith65@gmail.com
 *
 * =====================================
 */

Let ( [
	~string = Substitute (
		string ;
		[ "\\" ; "\\\\" ] ;	// reverse solidus
		[ "\"" ; "\\\"" ] ;	// quotation mark
		[ Char ( 8 ) ; "\b" ] ;		// backspace
		[ Char ( 12 ) ; "\f" ] ;	// formfeed
		[ Char ( 10 ) ; "\n" ] ;	// newline
		[ Char ( 13 ) ; "\r" ] ;	// carriage return
		[ Char ( 9 ) ; "\t" ]		// horizontal tab
	) ;
	~controlCharacters = Filter (
		~string ;
		Char ( 1 ) & Char ( 2 ) & Char ( 3 ) & Char ( 4 ) & Char ( 5 ) & Char ( 6 ) & Char ( 7 ) & Char ( 11 ) & Char ( 14 ) & Char ( 15 ) & Char ( 16 ) & Char ( 17 ) & Char ( 18 ) & Char ( 19 ) & Char ( 20 ) & Char ( 21 ) & Char ( 22 ) & Char ( 23 ) & Char ( 24 ) & Char ( 25 ) & Char ( 26 ) & Char ( 27 ) & Char ( 28 ) & Char ( 29 ) & Char ( 30 ) & Char ( 31 )
	) ;
	~string = If ( not IsEmpty ( ~controlCharacters ) ;
		Substitute (
			~string ;
			[ Char ( 1 ) ; "\u0001" ] ;
			[ Char ( 2 ) ; "\u0002" ] ;
			[ Char ( 3 ) ; "\u0003" ] ;
			[ Char ( 4 ) ; "\u0004" ] ;
			[ Char ( 5 ) ; "\u0005" ] ;
			[ Char ( 6 ) ; "\u0006" ] ;
			[ Char ( 7 ) ; "\u0007" ] ;
			[ Char ( 11 ) ; "\u000B" ] ;
			[ Char ( 14 ) ; "\u000E" ] ;
			[ Char ( 15 ) ; "\u000F" ] ;
			[ Char ( 16 ) ; "\u0010" ] ;
			[ Char ( 17 ) ; "\u0011" ] ;
			[ Char ( 18 ) ; "\u0012" ] ;
			[ Char ( 19 ) ; "\u0013" ] ;
			[ Char ( 20 ) ; "\u0014" ] ;
			[ Char ( 21 ) ; "\u0015" ] ;
			[ Char ( 22 ) ; "\u0016" ] ;
			[ Char ( 23 ) ; "\u0017" ] ;
			[ Char ( 24 ) ; "\u0018" ] ;
			[ Char ( 25 ) ; "\u0019" ] ;
			[ Char ( 26 ) ; "\u001A" ] ;
			[ Char ( 27 ) ; "\u001B" ] ;
			[ Char ( 28 ) ; "\u001C" ] ;
			[ Char ( 29 ) ; "\u001D" ] ;
			[ Char ( 30 ) ; "\u001E" ] ;
			[ Char ( 31 ) ; "\u001F" ]
		) ;
		~string
	)
] ;
	If ( not IsEmpty ( ~string ) ;
		"\"" & ~string & "\"" ;
		"null"
	)
)