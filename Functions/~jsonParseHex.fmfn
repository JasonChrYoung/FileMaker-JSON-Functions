/**
 * =====================================
 * ~jsonParseHex
 *
 * PURPOSE:
 *		While parsing a string, convert an escaped hex code to a unicode value.
 *
 * RETURNS:
 *		Unicode character.
 *
 * PARAMETERS:
 *		
 *
 * DEPENDENCIES:
 *		~jsonParseHex	(self: it's recursive!)
 *		~jsonParseNext
 *
 * HISTORY:
 *		CREATED on 2015-MAR-31 by Daniel Smith dansmith65@gmail.com
 *
 * =====================================
 */


Case (
	/* Step 0, set-up */
	not $~jsonParseHex.step ;
	Let ( [
		$~jsonParseHex.i = "" ;
		$~jsonParseHex.step = 1
	] ;
		~jsonParseHex
	) ;

	/* Step 1, main */
	$~jsonParseHex.step = 1 ;
	Let ( [
		$~jsonParseHex.i = $~jsonParseHex.i + 1 ;
		~ch = ~jsonParseNext ( "" ) ;
		~hex = Position (
			"0123456789ABCDEF" ;
			~ch ;
			1 ;
			1
		) - 1 ;
		$~jsonParseHex.result = $~jsonParseHex.result * 16 + ~hex ;
		
		$~jsonParseHex.step = If (
			Not IsEmpty ( $~json.error )		/* an error occurred */
				or IsEmpty ( ~hex )
				or ~hex < 0
				or ~hex > 15
				or $~jsonParseHex.i = 4
			;
			2 ;
			1
		)
	] ;
		~jsonParseHex
	) ;

	/* Step 2, clean-up and return result */
	$~jsonParseHex.step = 2 ;
	Let ( [
		~result = Char ( $~jsonParseHex.result ) ;
		// purge variables
		$~jsonParseHex.step = "" ;
		$~jsonParseHex.result = ""
	] ;
		~result
	)
)